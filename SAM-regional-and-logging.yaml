AWSTemplateFormatVersion: '2010-09-09'
Resources:
  RegionalsRestApi:
    Properties:
      DefinitionBody:
        basePath: /test
        definitions:
          Empty:
            type: object
          NewPet:
            properties:
              price:
                type: number
              type:
                $ref: '#/definitions/PetType'
            type: object
          NewPetResponse:
            properties:
              message:
                type: string
              pet:
                $ref: '#/definitions/Pet'
            type: object
          Pet:
            properties:
              id:
                type: string
              price:
                type: number
              type:
                type: string
            type: object
          PetType:
            enum:
            - dog
            - cat
            - fish
            - bird
            - gecko
            type: string
          Pets:
            items:
              $ref: '#/definitions/Pet'
            type: array
        host: execute-api.us-east-1.amazonaws.com
        info:
          title: Regional PetStore with Logging
          version: '2018-06-06T21:54:57Z'
        paths:
          /:
            get:
              consumes:
              - application/json
              produces:
              - text/html
              responses:
                '200':
                  description: 200 response
                  headers:
                    Content-Type:
                      type: string
              x-amazon-apigateway-integration:
                passthroughBehavior: when_no_match
                requestTemplates:
                  application/json: '{"statusCode": 200}'
                responses:
                  default:
                    responseParameters:
                      method.response.header.Content-Type: '''text/html'''
                    responseTemplates:
                      text/html: "<html>\n    <head>\n        <style>\n        body\
                        \ {\n            color: #333;\n            font-family: Sans-serif;\n\
                        \            max-width: 800px;\n            margin: auto;\n\
                        \        }\n        </style>\n    </head>\n    <body>\n  \
                        \      <h1>Welcome to your Pet Store API</h1>\n        <p>\n\
                        \            You have succesfully deployed your first API.\
                        \ You are seeing this HTML page because the <code>GET</code>\
                        \ method to the root resource of your API returns this content\
                        \ as a Mock integration.\n        </p>\n        <p>\n    \
                        \        The Pet Store API contains the <code>/pets</code>\
                        \ and <code>/pets/{petId}</code> resources. By making a <a\
                        \ href=\"/$context.stage/pets/\" target=\"_blank\"><code>GET</code>\
                        \ request</a> to <code>/pets</code> you can retrieve a list\
                        \ of Pets in your API. If you are looking for a specific pet,\
                        \ for example the pet with ID 1, you can make a <a href=\"\
                        /$context.stage/pets/1\" target=\"_blank\"><code>GET</code>\
                        \ request</a> to <code>/pets/1</code>.\n        </p>\n   \
                        \     <p>\n            You can use a REST client such as <a\
                        \ href=\"https://www.getpostman.com/\" target=\"_blank\">Postman</a>\
                        \ to test the <code>POST</code> methods in your API to create\
                        \ a new pet. Use the sample body below to send the <code>POST</code>\
                        \ request:\n        </p>\n        <pre>\n{\n    \"type\" :\
                        \ \"cat\",\n    \"price\" : 123.11\n}\n        </pre>\n  \
                        \  </body>\n</html>"
                    statusCode: '200'
                type: mock
          /pets:
            get:
              parameters:
              - in: query
                name: type
                required: false
                type: string
              - in: query
                name: page
                required: false
                type: string
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  headers:
                    Access-Control-Allow-Origin:
                      type: string
                  schema:
                    $ref: '#/definitions/Pets'
              x-amazon-apigateway-integration:
                httpMethod: GET
                passthroughBehavior: when_no_match
                requestParameters:
                  integration.request.querystring.page: method.request.querystring.page
                  integration.request.querystring.type: method.request.querystring.type
                responses:
                  default:
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: '''*'''
                    statusCode: '200'
                type: http
                uri: http://petstore-demo-endpoint.execute-api.com/petstore/pets
            options:
              consumes:
              - application/json
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  headers:
                    Access-Control-Allow-Headers:
                      type: string
                    Access-Control-Allow-Methods:
                      type: string
                    Access-Control-Allow-Origin:
                      type: string
                  schema:
                    $ref: '#/definitions/Empty'
              x-amazon-apigateway-integration:
                passthroughBehavior: when_no_match
                requestTemplates:
                  application/json: '{"statusCode": 200}'
                responses:
                  default:
                    responseParameters:
                      method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
                      method.response.header.Access-Control-Allow-Methods: '''POST,GET,OPTIONS'''
                      method.response.header.Access-Control-Allow-Origin: '''*'''
                    statusCode: '200'
                type: mock
            post:
              consumes:
              - application/json
              operationId: CreatePet
              parameters:
              - in: body
                name: NewPet
                required: true
                schema:
                  $ref: '#/definitions/NewPet'
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  headers:
                    Access-Control-Allow-Origin:
                      type: string
                  schema:
                    $ref: '#/definitions/NewPetResponse'
              x-amazon-apigateway-integration:
                httpMethod: POST
                passthroughBehavior: when_no_match
                responses:
                  default:
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: '''*'''
                    statusCode: '200'
                type: http
                uri: http://petstore-demo-endpoint.execute-api.com/petstore/pets
          /pets/{petId}:
            get:
              operationId: GetPet
              parameters:
              - in: path
                name: petId
                required: true
                type: string
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  headers:
                    Access-Control-Allow-Origin:
                      type: string
                  schema:
                    $ref: '#/definitions/Pet'
              x-amazon-apigateway-integration:
                httpMethod: GET
                passthroughBehavior: when_no_match
                requestParameters:
                  integration.request.path.petId: method.request.path.petId
                responses:
                  default:
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: '''*'''
                    statusCode: '200'
                type: http
                uri: http://petstore-demo-endpoint.execute-api.com/petstore/pets/{petId}
            options:
              consumes:
              - application/json
              parameters:
              - in: path
                name: petId
                required: true
                type: string
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  headers:
                    Access-Control-Allow-Headers:
                      type: string
                    Access-Control-Allow-Methods:
                      type: string
                    Access-Control-Allow-Origin:
                      type: string
                  schema:
                    $ref: '#/definitions/Empty'
              x-amazon-apigateway-integration:
                passthroughBehavior: when_no_match
                requestTemplates:
                  application/json: '{"statusCode": 200}'
                responses:
                  default:
                    responseParameters:
                      method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
                      method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
                      method.response.header.Access-Control-Allow-Origin: '''*'''
                    statusCode: '200'
                type: mock
        schemes:
        - https
        swagger: '2.0'
      EndpointConfiguration: REGIONAL
      MethodSettings:
      - DataTraceEnabled: true
        HttpMethod: '*'
        LoggingLevel: INFO
        MetricsEnabled: true
        ResourcePath: /*
      StageName: S1
    Type: AWS::Serverless::Api
Transform: AWS::Serverless-2016-10-31
